name: Build, Test & Publish

on:
  push:
    branches:
      - 'master'
      - 'main'

permissions: write-all

env:
  DENDRITE_VERSION: 0.13.6
  DENDRITE_DIST_VERSION: 2

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.21.0'

      - name: Build
        run: |
          bash build.sh

      - name: Upload bundle repo-build
        uses: actions/upload-artifact@v3
        with:
          path: npm/
          name: repo-build
          if-no-files-found: error

      - name: Pack packages
        run: |
          (cd ./npm/dendrite-dist && npm run release-prep && npm pack)
          (cd ./npm/linux-arm64 && npm pack)
          (cd ./npm/linux-x64 && npm pack)
          (cd ./npm/darwin-arm64 && npm pack)
          (cd ./npm/darwin-x64 && npm pack)

      - name: Upload bundle darwin-arm64
        uses: actions/upload-artifact@v3
        with:
          path: npm/darwin-arm64/dendrite-dist-darwin-arm64-*.tgz
          name: dendrite-dist-darwin-arm64.tgz
          if-no-files-found: error
      - name: Upload bundle darwin-x64
        uses: actions/upload-artifact@v3
        with:
          path: npm/darwin-x64/dendrite-dist-darwin-x64-*.tgz
          name: dendrite-dist-darwin-x64.tgz
          if-no-files-found: error
      - name: Upload bundle linux-x64
        uses: actions/upload-artifact@v3
        with:
          path: npm/linux-x64/dendrite-dist-linux-x64-*.tgz
          name: dendrite-dist-linux-x64.tgz
          if-no-files-found: error
      - name: Upload bundle linux-arm64
        uses: actions/upload-artifact@v3
        with:
          path: npm/linux-arm64/dendrite-dist-linux-arm64-*.tgz
          name: dendrite-dist-linux-arm64.tgz
          if-no-files-found: error
      - name: Upload bundle dendrite-dist
        uses: actions/upload-artifact@v3
        with:
          path: npm/dendrite-dist/dendrite-dist-*.tgz
          name: dendrite-dist.tgz
          if-no-files-found: error
      - name: Upload bundle tests
        uses: actions/upload-artifact@v3
        with:
          path: tests
          name: tests
          if-no-files-found: error
  test-linux-x64:
    runs-on: ubuntu-latest
    needs:
      - build-package
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/download-artifact@v3
        with:
          name: tests
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-linux-x64.tgz
      - name: Run NPM Test
        working-directory: ./tests
        run: |
          npm i ../dendrite-dist-*.tgz && npm test

  test-linux-arm64:
    runs-on: ubuntu-latest
    needs:
      - build-package
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: tests
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-linux-arm64.tgz
      - name: Run testing
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: aarch64
          distro: ubuntu22.04
          run: |
            apt update -q -y
            apt install -q -y curl bash sudo
            useradd -m otheruser
            cp ./dendrite-dist-*.tgz tests/
            chmod -R 777 .
            (cd tests && sudo -u otheruser bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash')
            (cd tests && sudo -u otheruser bash -c '. ~/.profile && nvm install v20 && npm i ./dendrite-dist-*.tgz && npm test')

  test-darwin-x64:
    runs-on: macos-latest
    needs:
      - build-package
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/download-artifact@v3
        with:
          name: tests
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-darwin-x64.tgz
      - name: Run NPM Test
        working-directory: ./tests
        run: |
          npm i ../dendrite-dist-*.tgz && npm test

  test-darwin-arm64:
    runs-on: macos-latest-xlarge
    needs:
      - build-package
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: actions/download-artifact@v3
        with:
          name: tests
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-darwin-arm64.tgz
      - name: Run NPM Test
        working-directory: ./tests
        run: |
          npm i ../dendrite-dist-*.tgz && npm test

  publish:
    runs-on: ubuntu-latest
    needs:
      - test-linux-x64
      - test-linux-arm64
      - test-darwin-x64
      - test-darwin-arm64
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-linux-x64.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-linux-arm64.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-darwin-x64.tgz
      - uses: actions/download-artifact@v3
        with:
          name: dendrite-dist-darwin-arm64.tgz
      - name: Run NPM Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish dendrite-dist-v*.tgz
          npm publish dendrite-dist-linux-x64-v*.tgz
          npm publish dendrite-dist-linux-arm64-v*.tgz
          npm publish dendrite-dist-darwin-x64-v*.tgz
          npm publish dendrite-dist-darwin-arm64-v*.tgz

  push:
    needs:
      - test-linux-x64
      - test-linux-arm64
      - test-darwin-x64
      - test-darwin-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master branch
        uses: actions/checkout@v3

      - name: Download and unpack all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Download workflow run artifacts
        uses: actions/download-artifact@v3

      - name: List all files
        run: tree

      - name: move files
        run: |
          mv -f repo-build/darwin-arm64/dist/* npm/darwin-arm64/dist/
          mv -f repo-build/darwin-x64/dist/* npm/darwin-x64/dist/
          mv -f repo-build/linux-arm64/dist/* npm/linux-arm64/dist/
          mv -f repo-build/linux-x64/dist/* npm/linux-x64/dist/
          rm -rf repo-build
          chmod +x ./npm/*/dist/*

      - name: Check if there are any changes
        id: has_changes
        run: |
          git status || exit 1
          test -n "$(git status --porcelain)" && result=yes || result=no
          echo "result=$result" >> $GITHUB_OUTPUT

      - name: Commit changes
        if: steps.has_changes.outputs.result == 'yes'
        run: |
          git config --local user.email "github-actions@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all
          git commit -m "Autobuild: Built from ${{ github.sha }}"

      - name: Push changes back to origin
        if: steps.has_changes.outputs.result == 'yes'
        run: |
          # XXX: workaround for https://github.com/orgs/community/discussions/55820
          git config --global http.version HTTP/1.1
          git pull -r
          git push https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git master
